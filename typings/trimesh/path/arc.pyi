"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass

from ..typed import ArrayLike, NDArray, Optional, float64

_TOL_ZERO = ...

@dataclass
class ArcInfo:
    radius: float
    center: NDArray[float64]
    normal: Optional[NDArray[float64]] = ...
    angles: Optional[NDArray[float64]] = ...
    span: Optional[float] = ...
    def __getitem__(self, item):  # -> Any:
        ...

def arc_center(points: ArrayLike, return_normal: bool = ..., return_angle: bool = ...) -> ArcInfo:
    """
    Given three points on a 2D or 3D arc find the center,
    radius, normal, and angular span.

    Parameters
    ---------
    points : (3, dimension) float
      Points in space, where dimension is either 2 or 3
    return_normal : bool
      If True calculate the 3D normal unit vector
    return_angle : bool
      If True calculate the start and stop angle and span

    Returns
    ---------
    info
      Arc center, radius, and other information.
    """
    ...

def discretize_arc(points, close=..., scale=...):  # -> ndarray[Any, dtype[float64]] | Any:
    """
    Returns a version of a three point arc consisting of
    line segments.

    Parameters
    ---------
    points : (3, d) float
      Points on the arc where d in [2,3]
    close :  boolean
      If True close the arc into a circle
    scale : float
      What is the approximate overall drawing scale
      Used to establish order of magnitude for precision

    Returns
    ---------
    discrete : (m, d) float
      Connected points in space
    """
    ...

def to_threepoint(center, radius, angles=...):
    """
    For 2D arcs, given a center and radius convert them to three
    points on the arc.

    Parameters
    -----------
    center : (2,) float
      Center point on the plane
    radius : float
      Radius of arc
    angles : (2,) float
      Angles in radians for start and end angle
      if not specified, will default to (0.0, pi)

    Returns
    ----------
    three : (3, 2) float
      Arc control points
    """
    ...
