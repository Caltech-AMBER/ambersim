"""
This type stub file was generated by pyright.
"""

def dict_to_path(as_dict):
    """
    Turn a pure dict into a dict containing entity objects that
    can be sent directly to a Path constructor.

    Parameters
    ------------
    as_dict : dict
      Has keys: 'vertices', 'entities'

    Returns
    ------------
    kwargs : dict
      Has keys: 'vertices', 'entities'
    """
    ...

def lines_to_path(lines):  # -> dict[str, Unknown]:
    """
    Turn line segments into a Path2D or Path3D object.

    Parameters
    ------------
    lines : (n, 2, dimension) or (n, dimension) float
      Line segments or connected polyline curve in 2D or 3D

    Returns
    -----------
    kwargs : dict
      kwargs for Path constructor
    """
    ...

def polygon_to_path(polygon):  # -> dict[str, Unknown]:
    """
    Load shapely Polygon objects into a trimesh.path.Path2D object

    Parameters
    -------------
    polygon : shapely.geometry.Polygon
      Input geometry

    Returns
    -----------
    kwargs : dict
      Keyword arguments for Path2D constructor
    """
    ...

def linestrings_to_path(multi):  # -> dict[str, NDArray[Unknown]]:
    """
    Load shapely LineString objects into a trimesh.path.Path2D object

    Parameters
    -------------
    multi : shapely.geometry.LineString or MultiLineString
      Input 2D geometry

    Returns
    -------------
    kwargs : dict
      Keyword arguments for Path2D constructor
    """
    ...

def faces_to_path(mesh, face_ids=..., **kwargs):  # -> dict[str, Unknown]:
    """
    Given a mesh and face indices find the outline edges and
    turn them into a Path3D.

    Parameters
    ------------
    mesh : trimesh.Trimesh
      Triangulated surface in 3D
    face_ids : (n,) int
      Indexes referencing mesh.faces

    Returns
    ---------
    kwargs : dict
      Kwargs for Path3D constructor
    """
    ...

def edges_to_path(edges, vertices, **kwargs):  # -> dict[str, Unknown]:
    """
    Given an edge list of indices and associated vertices
    representing lines, generate kwargs for a Path object.

    Parameters
    -----------
    edges : (n, 2) int
      Vertex indices of line segments
    vertices : (m, dimension) float
      Vertex positions where dimension is 2 or 3

    Returns
    ----------
    kwargs : dict
      Kwargs for Path constructor
    """
    ...
