"""
This type stub file was generated by pyright.
"""

def export_mesh(mesh, file_obj, file_type=..., resolver=..., **kwargs):  # -> dict[Unknown, Unknown]:
    """
    Export a Trimesh object to a file- like object, or to a filename

    Parameters
    -----------
    file_obj : str, file-like
      Where should mesh be exported to
    file_type : str or None
      Represents file type (eg: 'stl')
    resolver : None or trimesh.resolvers.Resolver
      Resolver to write referenced assets to

    Returns
    ----------
    exported : bytes or str
      Result of exporter
    """
    ...

def export_dict64(mesh):  # -> dict[str, Unknown]:
    """
    Export a mesh as a dictionary, with data encoded
    to base64.
    """
    ...

def export_dict(mesh, encoding=...):  # -> dict[str, Unknown]:
    """
    Export a mesh to a dict

    Parameters
    ------------
    mesh : trimesh.Trimesh
      Mesh to be exported
    encoding : str or None
      Such as 'base64'

    Returns
    -------------
    export : dict
      Data stored in dict
    """
    ...

def scene_to_dict(scene, use_base64=..., include_metadata=...):  # -> dict[str, Unknown]:
    """
    Export a Scene object as a dict.

    Parameters
    -------------
    scene : trimesh.Scene
      Scene object to be exported

    Returns
    -------------
    as_dict : dict
      Scene as a dict
    """
    ...

def export_scene(
    scene, file_obj, file_type=..., resolver=..., **kwargs
):  # -> dict[Unknown, Unknown] | dict[str, Unknown] | bytes | bytearray | memoryview | LiteralString | str | Any:
    """
    Export a snapshot of the current scene.

    Parameters
    ----------
    file_obj : str, file-like, or None
      File object to export to
    file_type : str or None
      What encoding to use for meshes
      IE: dict, dict64, stl

    Returns
    ----------
    export : bytes
      Only returned if file_obj is None
    """
    ...

_mesh_exporters = ...
