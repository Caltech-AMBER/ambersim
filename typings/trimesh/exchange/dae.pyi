"""
This type stub file was generated by pyright.
"""

import numpy as np

from .. import util

_EYE = np.eye(4)

def load_collada(file_obj, resolver=..., ignore_broken=..., **kwargs):  # -> dict[str, Unknown]:
    """
    Load a COLLADA (.dae) file into a list of trimesh kwargs.

    Parameters
    ----------
    file_obj : file object
      Containing a COLLADA file
    resolver : trimesh.visual.Resolver or None
      For loading referenced files, like texture images
    ignore_broken: bool
      Ignores broken references during loading:
        [collada.common.DaeUnsupportedError,
         collada.common.DaeBrokenRefError]
    kwargs : **
      Passed to trimesh.Trimesh.__init__

    Returns
    -------
    loaded : list of dict
      kwargs for Trimesh constructor
    """
    ...

def export_collada(mesh, **kwargs):  # -> bytes:
    """
    Export a mesh or a list of meshes as a COLLADA .dae file.

    Parameters
    -----------
    mesh: Trimesh object or list of Trimesh objects
        The mesh(es) to export.

    Returns
    -----------
    export: str, string of COLLADA format output
    """
    ...

def load_zae(file_obj, resolver=..., **kwargs):  # -> dict[str, Unknown]:
    """
    Load a ZAE file, which is just a zipped DAE file.

    Parameters
    -------------
    file_obj : file object
      Contains ZAE data
    resolver : trimesh.visual.Resolver
      Resolver to load additional assets
    kwargs : dict
      Passed to load_collada

    Returns
    ------------
    loaded : dict
      Results of loading
    """
    ...

_collada_loaders = ...
_collada_exporters = ...
if util.has_module("collada"): ...
else:
    _exc = ...
