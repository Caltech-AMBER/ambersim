"""
This type stub file was generated by pyright.
"""

"""
boolean.py
-------------

Do boolean operations on meshes using either Blender or Manifold.
"""

def difference(meshes, engine=..., **kwargs):
    """
    Compute the boolean difference between a mesh an n other meshes.

    Parameters
    ----------
    meshes : list of trimesh.Trimesh
      Meshes to be processed
    engine : str
      Which backend to use, i.e. 'blender' or 'manifold'

    Returns
    ----------
    difference : a - (other meshes), **kwargs for a Trimesh
    """
    ...

def union(meshes, engine=..., **kwargs):
    """
    Compute the boolean union between a mesh an n other meshes.

    Parameters
    ----------
    meshes : list of trimesh.Trimesh
      Meshes to be processed
    engine : str
      Which backend to use, i.e. 'blender' or 'manifold'

    Returns
    ----------
    union : a + (other meshes), **kwargs for a Trimesh
    """
    ...

def intersection(meshes, engine=..., **kwargs):
    """
    Compute the boolean intersection between a mesh an n other meshes.

    Parameters
    ----------
    meshes : list of trimesh.Trimesh
      Meshes to be processed
    engine : str
      Which backend to use, i.e. 'blender' or 'manifold'

    Returns
    ----------
    intersection : **kwargs for a Trimesh object of the
                    volume that is contained by all meshes
    """
    ...

def boolean_manifold(meshes, operation, debug=..., **kwargs):  # -> Trimesh:
    """
    Run an operation on a set of meshes using the Manifold engine.
    """
    ...

def boolean_scad(*args, **kwargs):  # -> Trimesh:
    ...

_engines = ...
