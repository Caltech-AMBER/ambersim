"""
This type stub file was generated by pyright.
"""

from dm_control import composer
from dm_control.composer.observation import observable
from dm_control.entities.manipulators import base

"""Module containing the standard Jaco hand."""
_JACO_HAND_XML_PATH = ...
_HAND_BODY = ...
_PINCH_SITE = ...
_GRIP_SITE = ...

class JacoHand(base.RobotHand):
    """A composer entity representing a Jaco hand."""

    @property
    def tool_center_point(self):  # -> Any | None:
        """Tool center point for the Jaco hand."""
        ...
    @property
    def joints(self):  # -> list[Unknown]:
        """List of joint elements."""
        ...
    @property
    def actuators(self):  # -> list[Unknown]:
        """List of finger actuators."""
        ...
    @property
    def hand_geom(self):  # -> list[Any]:
        """List of geoms belonging to the hand."""
        ...
    @property
    def finger_geoms(self):  # -> list[Unknown]:
        """List of geoms belonging to the fingers."""
        ...
    @property
    def grip_site(self):  # -> Any | None:
        """Grip site."""
        ...
    @property
    def pinch_site(self):  # -> Any | None:
        """Pinch site."""
        ...
    @property
    def pinch_site_pos_sensor(self):
        """Sensor that returns the cartesian position of the pinch site."""
        ...
    @property
    def pinch_site_quat_sensor(self):
        """Sensor that returns the orientation of the pinch site as a quaternion."""
        ...
    @property
    def mjcf_model(self):  # -> RootElement:
        """Returns the `mjcf.RootElement` object corresponding to this robot."""
        ...
    def set_grasp(self, physics, close_factors):  # -> None:
        """Sets the finger position to the desired positions.

        Args:
          physics: An instance of `mjcf.Physics`.
          close_factors: A number or list of numbers defining the desired grasp
            position of each finger. A value of 0 corresponds to fully opening a
            finger, while a value of 1 corresponds to fully closing it. If a single
            number is specified, the same position is applied to all fingers.
        """
        ...

class JacoHandObservables(base.JointsObservables):
    """Observables for the Jaco hand."""

    @composer.observable
    def pinch_site_pos(self):  # -> MJCFFeature:
        """The position of the pinch site, in global coordinates."""
        ...
    @composer.observable
    def pinch_site_rmat(self):  # -> MJCFFeature:
        """The rotation matrix of the pinch site in global coordinates."""
        ...
