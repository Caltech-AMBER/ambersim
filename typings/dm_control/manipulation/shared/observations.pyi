"""
This type stub file was generated by pyright.
"""

import collections

"""Shared configuration options for observations."""

class ObservableSpec(
    collections.namedtuple(
        "ObservableSpec", ["enabled", "update_interval", "buffer_size", "delay", "aggregator", "corruptor"]
    )
):
    """Configuration options for generic observables."""

    __slots__ = ...

class CameraObservableSpec(
    collections.namedtuple("CameraObservableSpec", ("height", "width") + ObservableSpec._fields)
):
    """Configuration options for camera observables."""

    __slots__ = ...

class ObservationSettings(collections.namedtuple("ObservationSettings", ["proprio", "ftt", "prop_pose", "camera"])):
    """Container of `ObservableSpecs` grouped by category."""

    __slots__ = ...

class ObservableNames(collections.namedtuple("ObservableNames", ["proprio", "ftt", "prop_pose", "camera"])):
    """Container that groups the names of observables by category."""

    __slots__ = ...
    def __new__(cls, proprio=..., ftt=..., prop_pose=..., camera=...):  # -> Self@ObservableNames:
        ...

_DISABLED_FEATURE = ...
_ENABLED_FEATURE = ...
_symlog1p = ...
_DISABLED_FTT = ...
_ENABLED_FTT = ...
_DISABLED_CAMERA = ...
_ENABLED_CAMERA = ...
PERFECT_FEATURES = ...
VISION = ...
JACO_ARM_OBSERVABLES = ...
JACO_HAND_OBSERVABLES = ...
FREEPROP_OBSERVABLES = ...

def make_options(obs_settings, obs_names):  # -> dict[Unknown, Unknown]:
    """Constructs a dict of configuration options for a set of named observables.

    Args:
      obs_settings: An `ObservationSettings` instance.
      obs_names: An `ObservableNames` instance.

    Returns:
      A nested dict containing `{observable_name: {option_name: value}}`.
    """
    ...
