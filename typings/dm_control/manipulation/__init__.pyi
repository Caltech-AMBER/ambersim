"""
This type stub file was generated by pyright.
"""

from absl import flags
from dm_control import composer as _composer
from dm_control.manipulation import bricks as _bricks
from dm_control.manipulation import lift as _lift
from dm_control.manipulation import place as _place
from dm_control.manipulation import reach as _reach
from dm_control.manipulation.shared import registry as _registry

"""A structured set of manipulation tasks with a single entry point."""
_TIME_LIMIT = ...
_TIMEOUT = ...
ALL = ...
TAGS = ...
FLAGS = ...

def get_environments_by_tag(tag):  # -> tuple[Unknown, ...]:
    """Returns the names of all environments matching a given tag.

    Args:
      tag: A string from `TAGS`.

    Returns:
      A tuple of environment names.
    """
    ...

def load(environment_name, seed=...):  # -> Environment:
    """Loads a manipulation environment.

    Args:
      environment_name: String, the name of the environment to load. Must be in
        `ALL`.
      seed: An optional integer used to seed the task's random number generator.
        If None (default), the random number generator will self-seed from a
        platform-dependent source of entropy.

    Returns:
      An instance of `composer.Environment`.
    """
    ...
