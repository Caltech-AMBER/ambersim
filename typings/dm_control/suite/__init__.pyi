"""
This type stub file was generated by pyright.
"""

import collections
import inspect
import itertools

from dm_control.rl import control
from dm_control.suite import (
    acrobot,
    ball_in_cup,
    cartpole,
    cheetah,
    dog,
    finger,
    fish,
    hopper,
    humanoid,
    humanoid_CMU,
    lqr,
    manipulator,
    pendulum,
    point_mass,
    quadruped,
    reacher,
    stacker,
    swimmer,
    walker,
)

"""A collection of MuJoCo-based Reinforcement Learning environments."""
_DOMAINS = ...
ALL_TASKS = ...
BENCHMARKING = ...
EASY = ...
HARD = ...
EXTRA = ...
NO_REWARD_VIZ = ...
REWARD_VIZ = ...
TASKS_BY_DOMAIN = ...

def load(domain_name, task_name, task_kwargs=..., environment_kwargs=..., visualize_reward=...):  # -> Any:
    """Returns an environment from a domain name, task name and optional settings.

    ```python
    env = suite.load('cartpole', 'balance')
    ```

    Args:
      domain_name: A string containing the name of a domain.
      task_name: A string containing the name of a task.
      task_kwargs: Optional `dict` of keyword arguments for the task.
      environment_kwargs: Optional `dict` specifying keyword arguments for the
        environment.
      visualize_reward: Optional `bool`. If `True`, object colours in rendered
        frames are set to indicate the reward at each step. Default `False`.

    Returns:
      The requested environment.
    """
    ...

def build_environment(domain_name, task_name, task_kwargs=..., environment_kwargs=..., visualize_reward=...):  # -> Any:
    """Returns an environment from the suite given a domain name and a task name.

    Args:
      domain_name: A string containing the name of a domain.
      task_name: A string containing the name of a task.
      task_kwargs: Optional `dict` specifying keyword arguments for the task.
      environment_kwargs: Optional `dict` specifying keyword arguments for the
        environment.
      visualize_reward: Optional `bool`. If `True`, object colours in rendered
        frames are set to indicate the reward at each step. Default `False`.

    Raises:
      ValueError: If the domain or task doesn't exist.

    Returns:
      An instance of the requested environment.
    """
    ...
