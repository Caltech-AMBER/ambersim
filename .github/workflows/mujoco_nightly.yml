name: Build Nightly MuJoCo Release

on:
  schedule:
    - cron: "0 5 * * *"  # runs at 5AM every day
  push:
    pull_request:
      branches: [main]

jobs:
  build-and-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Free Up GitHub Actions Ubuntu Runner Disk Space ðŸ”§
        uses: jlumbroso/free-disk-space@main
        with:
          # This might remove tools that are actually needed, if set to "true" but frees about 6 GB
          tool-cache: false

          # All of these default to true, but feel free to set to "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      # for caching the conda env
      # see: https://github.com/conda-incubator/setup-miniconda#caching-environments
      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: anaconda-client-env
          use-mamba: true
      - name: Cache conda
        uses: actions/cache@v3
        env:
          CACHE_NUMBER: 0
        with:
          path: ${{ env.CONDA }}/envs
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yml') }}
      - name: Update environment
        run:
          mamba env update -n ambersim -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      # mujoco build + install
      - name: Create and Store Wheel
        shell: bash -l {0}
        run: |
          # Installs mujoco from source
          sudo apt-get update -y
          sudo apt-get install -y \
            libgl1-mesa-dev \
            libxinerama-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxi-dev \
            ninja-build
          python -m pip install --upgrade pip
          ./install_mj_source.sh
          
          # Store the package as an artifact
          # the below path is known from the mujoco installation script
          mujoco_whl_path=$(find $PWD/../mujoco/python/dist -name "mujoco-*.whl")
          mjx_whl_path=$(find $PWD/../mujoco/mjx -name "mujoco-*.whl")
          echo "mujoco_path=$(realpath $mujoco_whl_path)" >> $GITHUB_ENV
          echo "mjx_path=$(realpath $mjx_whl_path)" >> $GITHUB_ENV
        id: package

      - name: Upload mujoco artifact
        uses: actions/upload-artifact@v3
        with:
          name: mujoco_wheel
          path: ${{ env.mujoco_path }}
          retention-days: 7

      - name: Upload mjx artifact
        uses: actions/upload-artifact@v3
        with:
          name: mjx_wheel
          path: ${{ env.mjx_path }}
          retention-days: 7