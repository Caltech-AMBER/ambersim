name: Code Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # get the most recent run ID associated with mujoco nightly
      - name: Get Recent Run ID
        id: get_run_id
        run: |
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/mujoco_nightly.yml/runs")
          echo "::set-output name=run_id::$(echo "$response" | jq -r '.workflow_runs[0].id')"
      - name: Print Recent Run ID
        run: echo "[DEBUG] Most recent run ID: ${{ steps.get_run_id.outputs.run_id }}"

      - name: Download mujoco artifact
        id: download-artifact-mujoco
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: mujoco_nightly.yml
          run_id: ${{ steps.get_run_id.outputs.run_id }}"
          check_artifacts: true
          search_artifacts: true
          name_is_regexp: true
          name: "mujoco_wheel-*"
          path: ${{ github.workspace }}
      - name: Download mjx artifact
        id: download-artifact-mjx
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: mujoco_nightly.yml
          run_id: ${{ steps.get_run_id.outputs.run_id }}"
          check_artifacts: true
          search_artifacts: true
          name_is_regexp: true
          name: "mjx_wheel-*"
          path: ${{ github.workspace }}
      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          bash ./install.sh -d
          pip install --no-deps --force-reinstall mujoco-*.whl
          pip install --no-deps --force-reinstall mujoco_mjx*.whl
      - name: Run black
        shell: bash -l {0}
        run: black --check .
      - name: Run flake8
        shell: bash -l {0}
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Run pyright
        shell: bash -l {0}
        run: |
          pyright
      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest